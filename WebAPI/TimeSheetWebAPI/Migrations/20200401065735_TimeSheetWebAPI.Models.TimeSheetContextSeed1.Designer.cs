// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeSheetWebAPI.Models;

namespace TimeSheetWebAPI.Migrations
{
    [DbContext(typeof(TimeSheetContext))]
    [Migration("20200401065735_TimeSheetWebAPI.Models.TimeSheetContextSeed1")]
    partial class TimeSheetWebAPIModelsTimeSheetContextSeed1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimeSheetWebAPI.Models.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManager")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = new Guid("e809d7b6-618a-4b5d-a2b8-9dfeefb29f85"),
                            ContactNumber = "1234567891",
                            DateOfJoining = new DateTime(2019, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Designation = "Software Engineer",
                            EmailId = "abc@xyz.com",
                            EmpId = "SM00000001",
                            FirstName = "Samitanjaya",
                            IsAdmin = false,
                            IsManager = false,
                            LastName = "Mishra",
                            Status = 0
                        },
                        new
                        {
                            EmployeeId = new Guid("a9adb739-2b74-4cd1-b3a8-ba1a3ed65cd4"),
                            ContactNumber = "1234567092",
                            DateOfJoining = new DateTime(2016, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Designation = "Senior Software Engineer",
                            EmailId = "abcd@xyza.com",
                            EmpId = "SM00000002",
                            FirstName = "Saswati",
                            IsAdmin = false,
                            IsManager = false,
                            LastName = "Mohanty",
                            Status = 0
                        });
                });

            modelBuilder.Entity("TimeSheetWebAPI.Models.Employee_Project", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeeId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Employee_Projects");
                });

            modelBuilder.Entity("TimeSheetWebAPI.Models.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PorjectStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProjectEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = new Guid("99eed6eb-8cdc-40e0-a212-45bd018115db"),
                            PorjectStartDate = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProId = "OP00000001",
                            ProjectEndDate = new DateTime(2030, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "Project-X"
                        },
                        new
                        {
                            ProjectId = new Guid("81f7a3a4-6d95-4db0-9906-fc3798014fc3"),
                            PorjectStartDate = new DateTime(2016, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProId = "OP00000002",
                            ProjectEndDate = new DateTime(2030, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectName = "Project-Y"
                        });
                });

            modelBuilder.Entity("TimeSheetWebAPI.Models.Employee_Project", b =>
                {
                    b.HasOne("TimeSheetWebAPI.Models.Employee", "Employee")
                        .WithMany("Employee_Projects")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimeSheetWebAPI.Models.Project", "Project")
                        .WithMany("Employee_Projects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
